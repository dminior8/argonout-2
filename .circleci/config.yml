# This config was automatically generated from your source code
# Stacks detected: deps:java:backend/location-service
version: 2.1
jobs:
  test-java:
    docker:
      - image: cimg/openjdk:21.0
      - image: cimg/postgres:17.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: postgres
    working_directory: ~/project/backend/services
    steps:
      - checkout:
          path: ~/
      - run:
          name: Wait for PostgreSQL to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 30s
      - run:
          name: Initialize database
          command: PGPASSWORD=root psql -h localhost -U postgres -f location-service/src/main/scripts/postgresql-init.sql
      - run:
          name: Wait for PostgreSQL to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 30s
      - run:
          name: Initialize database
          command: PGPASSWORD=root psql -h localhost -U postgres -f location-service/postgresql-init.sql
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Run tests in multiple directories
          command: |
            cd location-service && mvn verify && \
            cd ../game-service && mvn verify
      - store_test_results:
          path: target/surefire-reports
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.m2/repository
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
workflows:
  build-and-test:
    jobs:
      - test-java
    # - deploy:
    #     requires:
    #       - test-java
